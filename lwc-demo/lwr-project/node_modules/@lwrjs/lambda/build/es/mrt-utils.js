import { logger } from '@lwrjs/diagnostics';
import express from 'express';
import path from 'path';
// MRT has a specific URL to fetch associated artifacts from the deployed MRT bundle
const MRT_BASE_URL = `/mobify/bundle/${process.env.BUNDLE_ID || 'development'}/`;
// Default generated site root if not set in the config
const DEFAULT_SSG_ROOT = 'site';
function getSsgAppRelativePath(staticSiteGenerator) {
    return staticSiteGenerator?.outputDir || DEFAULT_SSG_ROOT;
}
/**
 * Get the URL for a artifact given the configured SSG root and the path to the artifact
 */
export function getMrtArtifactUrl(basePath, ssgRoot, artifactPath = '') {
    return path.join(basePath, MRT_BASE_URL, ssgRoot, artifactPath);
}
/**
 * Get the root directory of the static config in the mrt lambda
 */
export function getMrtSsgRoot(staticSiteGenerator) {
    return path.join(getSsgAppRelativePath(staticSiteGenerator));
}
export function addMrtStaticBundleMiddleware(app, staticSiteGenerator) {
    // Running at '' (no basePath)
    const basePath = '';
    const mrtArtifactUrl = getMrtArtifactUrl(basePath, getSsgAppRelativePath(staticSiteGenerator));
    const mrtSSgRoot = path.resolve(process.cwd(), getMrtSsgRoot(staticSiteGenerator));
    logger.debug({ label: `MrtStaticBundleMiddleware`, message: `${mrtArtifactUrl} -> ${mrtSSgRoot}` });
    app.use(mrtArtifactUrl, express.static(mrtSSgRoot, {
        fallthrough: false,
    }));
}
//# sourceMappingURL=mrt-utils.js.map